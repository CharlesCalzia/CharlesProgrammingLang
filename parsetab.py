
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE EQUALS FLOAT INT LPAREN MINUS PLUS POWER RPAREN STRING TIMES VARIABLE clear cread cwriteexpression : VARIABLE EQUALS expressionexpression : cwrite LPAREN expression RPARENexpression : cread LPAREN expression RPARENexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression POWER expressionexpression : LPAREN expression RPARENexpression : INTexpression : FLOATexpression : STRINGexpression : VARIABLEexpression : clear'
    
_lr_action_items = {'VARIABLE':([0,4,10,11,12,13,14,15,16,18,],[2,2,2,2,2,2,2,2,2,2,]),'cwrite':([0,4,10,11,12,13,14,15,16,18,],[3,3,3,3,3,3,3,3,3,3,]),'cread':([0,4,10,11,12,13,14,15,16,18,],[5,5,5,5,5,5,5,5,5,5,]),'LPAREN':([0,3,4,5,10,11,12,13,14,15,16,18,],[4,16,4,18,4,4,4,4,4,4,4,4,]),'INT':([0,4,10,11,12,13,14,15,16,18,],[6,6,6,6,6,6,6,6,6,6,]),'FLOAT':([0,4,10,11,12,13,14,15,16,18,],[7,7,7,7,7,7,7,7,7,7,]),'STRING':([0,4,10,11,12,13,14,15,16,18,],[8,8,8,8,8,8,8,8,8,8,]),'clear':([0,4,10,11,12,13,14,15,16,18,],[9,9,9,9,9,9,9,9,9,9,]),'$end':([1,2,6,7,8,9,19,20,21,22,23,24,26,28,29,],[0,-13,-10,-11,-12,-14,-4,-5,-6,-7,-8,-1,-9,-2,-3,]),'PLUS':([1,2,6,7,8,9,17,19,20,21,22,23,24,25,26,27,28,29,],[10,-13,-10,-11,-12,-14,10,10,10,10,10,10,10,10,-9,10,-2,-3,]),'MINUS':([1,2,6,7,8,9,17,19,20,21,22,23,24,25,26,27,28,29,],[11,-13,-10,-11,-12,-14,11,11,11,11,11,11,11,11,-9,11,-2,-3,]),'TIMES':([1,2,6,7,8,9,17,19,20,21,22,23,24,25,26,27,28,29,],[12,-13,-10,-11,-12,-14,12,12,12,12,12,12,12,12,-9,12,-2,-3,]),'DIVIDE':([1,2,6,7,8,9,17,19,20,21,22,23,24,25,26,27,28,29,],[13,-13,-10,-11,-12,-14,13,13,13,13,13,13,13,13,-9,13,-2,-3,]),'POWER':([1,2,6,7,8,9,17,19,20,21,22,23,24,25,26,27,28,29,],[14,-13,-10,-11,-12,-14,14,14,14,14,14,14,14,14,-9,14,-2,-3,]),'EQUALS':([2,],[15,]),'RPAREN':([2,6,7,8,9,17,19,20,21,22,23,24,25,26,27,28,29,],[-13,-10,-11,-12,-14,26,-4,-5,-6,-7,-8,-1,28,-9,29,-2,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,4,10,11,12,13,14,15,16,18,],[1,17,19,20,21,22,23,24,25,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> VARIABLE EQUALS expression','expression',3,'p_assign','main.py',92),
  ('expression -> cwrite LPAREN expression RPAREN','expression',4,'p_expression_cwrite','main.py',96),
  ('expression -> cread LPAREN expression RPAREN','expression',4,'p_expression_cread','main.py',100),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','main.py',104),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','main.py',105),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','main.py',106),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','main.py',107),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','main.py',108),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','main.py',118),
  ('expression -> INT','expression',1,'p_expression_int','main.py',122),
  ('expression -> FLOAT','expression',1,'p_expression_float','main.py',126),
  ('expression -> STRING','expression',1,'p_expression_string','main.py',130),
  ('expression -> VARIABLE','expression',1,'p_variable','main.py',139),
  ('expression -> clear','expression',1,'p_clear','main.py',147),
]
